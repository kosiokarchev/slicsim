imports: !import
  - from torch.distributions import PowerTransform
  - from pyro.distributions import Delta, Uniform, Normal, HalfNormal, MultivariateNormal, InverseGamma, TransformedDistribution
  - from clipppy.distributions import conundis, SupportedTransformedDistribution
  - from phytorch.cosmology.module import CosmologyModule
  - from phytorch.cosmology.drivers.analytic import LambdaCDM
defs:
  labels:
    Om0: $\Omega_{m 0}$
    Ode0: $\Omega_{\Lambda 0}$
    sigma_z: $\sigma_z$
    sigma_res: $\sigma_{\mathrm{res}}$
    mean_M0: $M_0$
    alpha: $\alpha$
    beta: $\beta$
    mean_x1: $\hat{x}_1$
    log10_R_x1: $\log_{10} R_{x_1}$
    mean_c: $\hat{c}$
    log10_R_c: $\log_{10} R_{c}$

  zcmb: &zcmb !pt {{ zcmb_name }}
  vars_scale_tril: &vars_scale_tril !pt {{ vars_scale_tril_name }}
  N: &N !py:len [*zcmb]

  cosmo: &cosmo !py:CosmologyModule
    cls: !py:LambdaCDM
    method: distmod
    unsqueeze: 1

  priors:
    Om0: &prior_Om0 !py:Uniform [0, 2]
    Ode0: &prior_Ode0 !py:Uniform [0, 2]
    alpha: &prior_alpha !py:Uniform [0, 1]
    beta: &prior_beta !py:Uniform [0, 4]
    mean_M0: &prior_meanM0 !py:Normal [-19.3, 2]
    sigma_res: &prior_sigma_res !py:conundis.ConUnDisMixin.new_constrained
      /: !py:SupportedTransformedDistribution
        - !py:InverseGamma [3e-3, 3e-3]
        - [!py:PowerTransform [0.5]]
      constraint_lower: 1e-3
      constraint_upper: 1
    sigma_z: &prior_sigma_z !py:conundis.ConUnDisMixin.new_constrained
      /: !py:SupportedTransformedDistribution
        - !py:InverseGamma [3e-4, 3e-4]
        - [!py:PowerTransform [0.5]]
      constraint_lower: 1e-3
      constraint_upper: 0.2

  zobs: &zobs_ !Deterministic:zobs
    event_dim: 1
    /: *zcmb

{% if not gen %}
  data: &data !pt {{ data_name }}
conditioning:
  data: ![] [*data, data]
{% endif %}
model: !Sampler:data
  to_event: 1
  /: !Stochastic
    - !py:MultivariateNormal
    - scale_tril: *vars_scale_tril
      loc: !Stochastic
        - !py:stack_data
        - m: !Deterministic:m
            event_dim: 1
            /: !Stochastic
              - !+
              - a: !Stochastic
                  - *cosmo
                  {% if photoz|default(False) %}
                  - z: !Sampler
                      to_event: 1
                      /: !Stochastic
                        - !py:conundis.Normal
                        - constraint_lower: 0.005
                          constraint_upper: 2.
                          loc: !AllEncapsulator
                            - *zobs_
                            - &zobs
                          scale: !Stochastic
                            - !*
                            - a: !UnsqueezeEffect
                                - !Sampler:sigma_z {/: *prior_sigma_z, init: 0.04}
                              b: !Stochastic [!+ , {a: 1, b: *zobs}]
                  {% else %}
                  - z: !Deterministic:z
                      event_dim: 1
                      /: *zobs_
                  {% endif %}
                    Om0:  !Sampler {/: *prior_Om0, init: 0.3}
                    Ode0: !Sampler {/: *prior_Ode0, init: 0.7}
                b: !Deterministic:M
                  event_dim: 1
                  /: !Stochastic
                    - !py:phillips
                    - alpha: !Sampler {/: *prior_alpha, init: 0.14}
                      beta:  !Sampler {/: *prior_beta, init: 3.1}
                      M0: !Sampler
                        /: !Stochastic
                          - !py:Normal
                          - loc: !Sampler:mean_M0 {/: *prior_meanM0, init: -19.5}
                            scale: !Sampler:sigma_res {/: *prior_sigma_res, init: 0.1}
                        indep: [*N]
                        to_event: 0

                      {% for varname, std in (('x1', 1), ('c', 0.1)) %}
                      {{ varname }}: !AllEncapsulator
                        - !Sampler
                          /: !Stochastic
                            - !py:Normal
                            - loc: !Sampler:mean_{{ varname }}
                                /: !py:Normal [0, {{ 10 * std }}]
                                init: 0.
                              scale: !Effect
                                - !eval "lambda x: 10**x"
                                - !Sampler:log10_R_{{ varname }}
                                  /: !py:Uniform [-5, 2]
                                  init: !py:math.log10 {{ std }}
                          indep: [*N]
                          to_event: 0
                        - &{{ varname }}
                      {% endfor %}
          x1: *x1
          c: *c
lightning_nre:
  param_names:
    - Om0
    - Ode0
    {% if photoz|default(False) %}
    - sigma_z
    {% endif %}
    - mean_M0
    - sigma_res
    - alpha
    - beta
    - mean_x1
    - log10_R_x1
    - mean_c
    - log10_R_c
    {% if latent|default(False) %}
    - M0
    {% endif %}
  obs_names: [ data ]
  dataset_config: !py:clipppy.commands.lightning.config.DatasetConfig
    cls: !py:clipppy.commands.nre.CPDataset
    kwargs:
      ranges:
        mean_M0: [ -21, -18 ]
        mean_x1: [ -3., 3. ]
        mean_c: [ -0.3, 0.3 ]
guide:
  {% if vitype == 'mvn' %}
  - cls: MVN
    name: mvn
    init_scale: 0.01
  {% elif vitype == 'hpmvn' %}
  - cls: HPMVN
    name: hpmvn
    diag: [M0, x1, c {% if photoz|default(False) %} , z {% endif %}]
    hdims: {M0: 0, x1: 0, c: 0 {% if photoz|default(False) %} , z: 0 {% endif %}}
    init_scale_full: 0.01
    init_scale_diag: 0.01
    init_scale_const_corr: 0.01
  {% endif %}
